name: CI/CD Pipeline

on: 
  push:
    branches: 
      - main # Déclenché à chaque nouveau commit sur le main

jobs:
  CI_CD_Pipeline:
    name: CI/CD Pipeline
    runs-on: ubuntu-latest

    steps:
      - name: Initialize Git User
        run: |
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
      
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      
      - name: Install dependencies
        run: npm i --force
     
      - name: Build
        env:
          CI: false  # Ignorer les erreurs ESLint dans le cadre de la construction
        run: npm run build

      - name: Test
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_API_MOVE_URL: ${{ secrets.REACT_APP_API_MOVE_URL }}
        run: npm run test -- --watchAll=false  # Exécute les tests une fois et arrête le processus

      - name: Check test result
        if: success()  # Si les tests ont réussi
        run: echo "Test validé"

      - name: Checkout release branch with token
        if: success()  # Si les tests ont réussi
        uses: actions/checkout@v1
        with:
          ref: release
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Merge main into release
        if: success()  # Si les tests ont réussi
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "Merging main into release"
          git pull origin release
          git fetch origin main
          git merge origin/main --no-ff --no-edit
          git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/melissabillard/projet-auto-test.git release
          echo "Merge de la branche en production validé"

      - name: Check test failure
        if: failure()  # Si une étape précédente a échoué
        run: echo "Tests échoués !"
